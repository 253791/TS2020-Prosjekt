#include <Wire.h>
#include <Adafruit_BMP280.h>


#define BIT_VALUE 8

Adafruit_BMP280 bmp280;

void setup() {
  Serial.begin(9600);
  while ( !Serial ) delay(100);
  bmp280.begin();
  if (!bmp280.begin()) {  // Initialize BMP280
    Serial.println("BMP280 sensor initialization failed!");
    while (1);
  }
  Serial.println("Setup complete, device is ready.");
}

int generateTrueRandomNumber() {
  long L1 = analogRead(A1); // Read light sensor
  long L2 = analogRead(A2); // Read wire sensor
  long L3 = (long)bmp280.readPressure(); // Read pressure sensor
  long S1 = analogRead(A0); // Read sound sensor

  if (S1 == 0) {
    S1 = 1; // Prevent division/modulo by zero
  }
  
  long Z1 = (L1 * L2) % S1;
  long Z2 = (L2 * L3) % S1;
  long Z3 = (L3 * L1) % S1;

  int Y1 = (Z1 > Z2) ? 1 : 0;
  int Y2 = (Z2 > Z3) ? 1 : 0;

  return Y1 ^ Y2; // Return the XOR of Y1 and Y2
}

int generateNbitNum(int bits) {
  int result = 0;
  for (int i = 0; i < bits; i++) {
    int bit = generateTrueRandomNumber(); // Get a random bit
    result = (result << 1) | bit; // Shift result left and add new bit
  }
  return result;
}
void loop() {
  while (Serial.available() == 0) {} // If button is pressed

  String inputString = Serial.readStringUntil('\n');

  if (inputString = 'number') {
    int randomNumber = generateNbitNum(BIT_VALUE);
    // Print the binary format
    Serial.print("Binary: ");
    for (int i = BIT_VALUE - 1; i >= 0; i--) {
      Serial.print((randomNumber >> i) & 1); // Extract each bit and print
    }
    
    // Print the decimal equivalent
    Serial.print(" | Decimal: ");
    Serial.println(randomNumber);
  }
}
